{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { auth } from '../../utils/api';\n// 从 localStorage 获取初始 token\nconst storedToken = localStorage.getItem('token');\nconst initialState = {\n  user: null,\n  token: storedToken,\n  isAuthenticated: false,\n  isLoading: false,\n  // 初始状态不设置为 loading\n  error: null\n};\nexport const initializeAuth = createAsyncThunk('auth/initialize', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const user = await auth.validateToken();\n    return {\n      user,\n      token: storedToken\n    };\n  } catch (error) {\n    return rejectWithValue(error instanceof Error ? error.message : 'Failed to validate token');\n  }\n});\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const data = await auth.login(email, password);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error instanceof Error ? error.message : 'Login failed');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setCredentials: (state, action) => {\n      const {\n        user,\n        token\n      } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n      state.isLoading = false;\n      state.error = null;\n    },\n    logout: state => {\n      auth.logout();\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n      state.error = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Initialize Auth\n    .addCase(initializeAuth.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(initializeAuth.fulfilled, (state, action) => {\n      const {\n        user,\n        token\n      } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(initializeAuth.rejected, (state, action) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n      state.error = action.payload;\n      auth.logout(); // 确保清除存储的 token\n    })\n    // Login\n    .addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      const {\n        user,\n        token\n      } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setCredentials,\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","auth","storedToken","localStorage","getItem","initialState","user","token","isAuthenticated","isLoading","error","initializeAuth","_","rejectWithValue","validateToken","Error","message","login","email","password","data","authSlice","name","reducers","setCredentials","state","action","payload","logout","clearError","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/joyous/Desktop/joyous/aichat/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { auth } from '../../utils/api';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\n// 从 localStorage 获取初始 token\nconst storedToken = localStorage.getItem('token');\n\nconst initialState: AuthState = {\n  user: null,\n  token: storedToken,\n  isAuthenticated: false,\n  isLoading: false, // 初始状态不设置为 loading\n  error: null,\n};\n\nexport const initializeAuth = createAsyncThunk(\n  'auth/initialize',\n  async (_, { rejectWithValue }) => {\n    try {\n      const user = await auth.validateToken();\n      return { user, token: storedToken };\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Failed to validate token');\n    }\n  }\n);\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }: { email: string; password: string }, { rejectWithValue }) => {\n    try {\n      const data = await auth.login(email, password);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error instanceof Error ? error.message : 'Login failed');\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setCredentials: (\n      state,\n      action: PayloadAction<{ user: User; token: string }>\n    ) => {\n      const { user, token } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n      state.isLoading = false;\n      state.error = null;\n    },\n    logout: (state) => {\n      auth.logout();\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n      state.error = null;\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Initialize Auth\n      .addCase(initializeAuth.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(initializeAuth.fulfilled, (state, action) => {\n        const { user, token } = action.payload;\n        state.user = user;\n        state.token = token;\n        state.isAuthenticated = true;\n        state.isLoading = false;\n        state.error = null;\n      })\n      .addCase(initializeAuth.rejected, (state, action) => {\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n        state.isLoading = false;\n        state.error = action.payload as string;\n        auth.logout(); // 确保清除存储的 token\n      })\n      // Login\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        const { user, token } = action.payload;\n        state.user = user;\n        state.token = token;\n        state.isAuthenticated = true;\n        state.isLoading = false;\n        state.error = null;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string;\n      });\n  },\n});\n\nexport const { setCredentials, logout, clearError } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}