{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { auth } from '../../utils/api';\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true\n};\nexport const initializeAuth = createAsyncThunk('auth/initialize', async (_, {\n  dispatch\n}) => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No token found');\n    }\n    const user = await auth.validateToken();\n    dispatch(setCredentials({\n      user,\n      token\n    }));\n    return user;\n  } catch (error) {\n    localStorage.removeItem('token');\n    throw error;\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setCredentials: (state, action) => {\n      const {\n        user,\n        token\n      } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n      state.isLoading = false;\n      localStorage.setItem('token', token);\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(initializeAuth.pending, state => {\n      state.isLoading = true;\n    }).addCase(initializeAuth.fulfilled, state => {\n      state.isLoading = false;\n    }).addCase(initializeAuth.rejected, state => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n    });\n  }\n});\nexport const {\n  setCredentials,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","auth","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","initializeAuth","_","dispatch","Error","validateToken","setCredentials","error","removeItem","authSlice","name","reducers","state","action","payload","setItem","logout","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/joyous/Desktop/joyous/aichat/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { auth } from '../../utils/api';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true,\n};\n\nexport const initializeAuth = createAsyncThunk(\n  'auth/initialize',\n  async (_, { dispatch }) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const user = await auth.validateToken();\n      dispatch(setCredentials({ user, token }));\n      return user;\n    } catch (error) {\n      localStorage.removeItem('token');\n      throw error;\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setCredentials: (\n      state,\n      action: PayloadAction<{ user: User; token: string }>\n    ) => {\n      const { user, token } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isAuthenticated = true;\n      state.isLoading = false;\n      localStorage.setItem('token', token);\n    },\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n      localStorage.removeItem('token');\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(initializeAuth.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(initializeAuth.fulfilled, (state) => {\n        state.isLoading = false;\n      })\n      .addCase(initializeAuth.rejected, (state) => {\n        state.isLoading = false;\n        state.isAuthenticated = false;\n        state.user = null;\n        state.token = null;\n      });\n  },\n});\n\nexport const { setCredentials, logout } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,EAAiBC,gBAAgB,QAAQ,kBAAkB;AAC/E,SAASC,IAAI,QAAQ,iBAAiB;AAetC,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGT,gBAAgB,CAC5C,iBAAiB,EACjB,OAAOU,CAAC,EAAE;EAAEC;AAAS,CAAC,KAAK;EACzB,IAAI;IACF,MAAMP,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIQ,KAAK,CAAC,gBAAgB,CAAC;IACnC;IACA,MAAMT,IAAI,GAAG,MAAMF,IAAI,CAACY,aAAa,CAAC,CAAC;IACvCF,QAAQ,CAACG,cAAc,CAAC;MAAEX,IAAI;MAAEC;IAAM,CAAC,CAAC,CAAC;IACzC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChC,MAAMD,KAAK;EACb;AACF,CACF,CAAC;AAED,MAAME,SAAS,GAAGlB,WAAW,CAAC;EAC5BmB,IAAI,EAAE,MAAM;EACZhB,YAAY;EACZiB,QAAQ,EAAE;IACRL,cAAc,EAAEA,CACdM,KAAK,EACLC,MAAoD,KACjD;MACH,MAAM;QAAElB,IAAI;QAAEC;MAAM,CAAC,GAAGiB,MAAM,CAACC,OAAO;MACtCF,KAAK,CAACjB,IAAI,GAAGA,IAAI;MACjBiB,KAAK,CAAChB,KAAK,GAAGA,KAAK;MACnBgB,KAAK,CAACb,eAAe,GAAG,IAAI;MAC5Ba,KAAK,CAACZ,SAAS,GAAG,KAAK;MACvBH,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEnB,KAAK,CAAC;IACtC,CAAC;IACDoB,MAAM,EAAGJ,KAAK,IAAK;MACjBA,KAAK,CAACjB,IAAI,GAAG,IAAI;MACjBiB,KAAK,CAAChB,KAAK,GAAG,IAAI;MAClBgB,KAAK,CAACb,eAAe,GAAG,KAAK;MAC7Ba,KAAK,CAACZ,SAAS,GAAG,KAAK;MACvBH,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC;EACDS,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,cAAc,CAACmB,OAAO,EAAGR,KAAK,IAAK;MAC1CA,KAAK,CAACZ,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDmB,OAAO,CAAClB,cAAc,CAACoB,SAAS,EAAGT,KAAK,IAAK;MAC5CA,KAAK,CAACZ,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDmB,OAAO,CAAClB,cAAc,CAACqB,QAAQ,EAAGV,KAAK,IAAK;MAC3CA,KAAK,CAACZ,SAAS,GAAG,KAAK;MACvBY,KAAK,CAACb,eAAe,GAAG,KAAK;MAC7Ba,KAAK,CAACjB,IAAI,GAAG,IAAI;MACjBiB,KAAK,CAAChB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU,cAAc;EAAEU;AAAO,CAAC,GAAGP,SAAS,CAACc,OAAO;AAC3D,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}